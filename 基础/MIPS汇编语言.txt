C循环：
while(save[i] == k)
	i += 1;

MIPS汇编指令格式：
i和k放在 $s3 和 $s5 中，save数组基址在 $s6 中
Loop:
	sll $t1, $s3, 2
	add $t1, $t1, $s6
	lw  $t0, 0($t1)
	bne $t0, $s5, Exit
	addi $s3, $s3, 1
	j    Loop
Exit:
	
=======================================================
C递归过程：
int fact(int n){
	if(n < 1){
		return 1;
	}
	else{
		return n * fact(n-1);
	}
}

MIPS汇编指令格式：
fact:
	addi $sp, $sp, -8
	sw   $ra, 4($sp)
	sw   $a0, 0($sp)
	slti $t0, $a0, 1
	beq  $t0, $zero Ll
	addi $v0, $zero, 1
	addi $sp, $sp, 8
	jr   $ra
	Ll:
		addi $a0, $a0, -1
		jal  fact
		lw   $a0, 0($sp)
		lw   $ra, 4($sp)
		addi $sp, $sp, 8
		mul  $v0, $a0, $v0
		jr   $ra
=========================================================

C过程——复制字符串：
void strcpy(char[] x, char[] y){
	int i;
	i = 0;
	while((x[i] = y[i]) != '\0')
		i += 1;
}

MIPS汇编指令格式：
//x和y的基址放在$a0、$a1中，使用$t0存储局部变量 i，这样就可以不压栈。
strcpy:
	add $t0, $zero, $zero
	L1:
		add $t1, $a1, $t0
		lb  $t2, 0($t0)
		add $t3, $a0, $t0
		sb  $t2, 0($t3)
		beq $t2, $zero, L2
		addi $t0, $t0, 1
		j   L1
	L2:
		jr $ra












