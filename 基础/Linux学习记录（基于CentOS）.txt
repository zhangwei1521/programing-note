										Linux学习记录（基于CentOS）
	Linux是一个操作系统内核，RHEL、CentOS、Ubuntu等发行版是将linux内核和各种GNU工具打包在一起后发布的完整操作系统。几种
常见linux发行版：早期 Red Hat --> Fedora		Debian -->		Slackware -->
						|						   |				|
					  RHEL --> 					  Ubuntu -->		SUSE -->
						|
					  CentOS --> 
	CentOS安装:基于Vmware Workstation
	新建虚拟机：vmware中选择创建新的虚拟机，然后选择“稍后安装操作系统”，继续直到选择安装位置，选择一个有足够空间的盘符下的文件夹，
输入虚拟机名，下一步设置分配的磁盘容量，使用默认20G就够了，下一步后点击“自定义硬件”，其中“CD/DVD”项不修改，网络设备
选择NAT，然后关闭就结束了。
	几种网络模式说明：桥接模式——虚拟机和物理机以并列方式连接同一个网络，NAT模式——物理机作为虚拟机的“路由器”，
仅主机模式——相当于使用网线直接连接虚拟机和物理机。
	安装linux：在新建的虚拟机主页，点击“编辑虚拟机设置”，“CD/DVD”项选择“使用ISO镜像文件”，选择下载的centos镜像。然后确定。
虚拟机主页点击“开启此虚拟机”，进入安装过程，选择第一行“Install ...”，回车后设置语言等，继续到安装信息摘要，点击“安装位置”，
选中“我要配置分区”，点击“完成”，进入分区界面，LVM下拉框选择“标准分区”，点击 + 号设置挂载点为 /boot，期望容量为 200M，然后
添加挂载点。继续添加 swap 分区，4GB，根分区 /，期望容量留空，表示将剩下的空间全部给根挂载点。点击完成-->接受更改-->开始安装，
点击“ROOT密码”设置root密码，然后继续直到安装完成，点击重启。输入root、root密码后登陆系统。
	NAT网络连接模式设置：
	1、检查宿主机的VMware DHCP Service 和VMwareNAT Service两个服务是否启动
	2、设置宿主机的本地连接的属性：共享--允许其他网络用户通过此计算机的Internet连接来连接，选择VMnet8.
	3、查看本机使用的DNS：ipconfig -all,设置VMnet8网络适配器的Ipv4属性：ip地址使用一个需要的局域网地址，DNS设置为宿主机使用的DNS
	4、VMware的虚拟网络编辑器中选择NAT模式，子网ip设置为VMnet8设定的网段，NAT设置中网关地址设置为VMnet8的地址。
	5、使用 dhclient 自动获取一个ip地址，使用 ip addr查看ip地址。使用 ping -c 4 www.baidu.com 测试网络联通性。
	6、使用 vi /etc/sysconfig/network-scripts/ifcfg-ens33 设置静态ip：ONBOOT=no 改为yes（网卡驱动随着系统一起启动），
BOOTPROTO=dhcp 改为static（静态ip），新增：
		IPADDR=192.168.112.88（VMnet8设置的网段中的一个地址）
		NETMASK=255.255.255.0
		GATEWAY=192.168.112.2（VMnet8的地址）
		DNS1=119.29.29.29（VMnet8设置的DNS地址，也就是宿主机的DNS）
	7、使用 systemctl restart network.service 重启网络服务。
	使用图形用户界面登陆，默认在tty1，但是tty命令显示是0，可以使用Ctrl+Alt+(F2~F6)不关闭图形服务切换到命令行，使用
Ctrl+Alt+F1切换回图形用户界面。
	图形用户界面使用 init 3 关闭图形服务并切换到命令行界面。
	使用 startx 开启图形服务。（最好不使用）
	http://www.cnblogs.com/guo-rong/p/9621122.html
	快捷键：Ctrl+D 退出当前终端 Ctrl+C 结束当前命令 Ctrl+Z暂停当前进程，使用fg恢复 Ctrl+A移动光标到行首，Ctrl+E移动
光标到行尾。
	关机：shutdown -h now/10   -r（重启） 关机前使用sync将内存中数据写到磁盘。
	忘记root用户密码处理方法：
	1重启系统，加载内核前使用下键停止继续启动，然后移动到第一行输入e进入编辑界面，找到linux16开头的行，修改ro为
rw init=/sysroot/bin/bash，然后Ctrl+x进入emergency模式，使用chroot切换到sysroot（原始系统）[chroot /sysroot/]，使用LANG=en改变当前终端
语言为英语，然后使用passwd输入新密码,touch /.autorelabel 使修改生效，然后使用Ctrl+D，reboot重启系统。
	2使用rescue模式：虚拟机中电源处选择“打开电源进入固件”，进入BIOS后设置启动系统从光驱开始（将CD-ROM移到最前），F10
保存退出后进入光驱启动模式，使用下键选择Troubleshooting，回车后选择Rescue a CentOS...连续回车到输出提示，输入1继续，
然后chroot /mnt/sysimage进入初试系统，使用passwd改密码。Ctrl+D退出Rescue模式，reboot重启。

	远程登录
	linux系统通过sshd服务提供远程登录功能，默认使用22号端口，通常安装完系统就默认安装并开启了该服务，所以不需要进行额外
的配置。sshd服务的配置文件是：/etc/ssh/sshd_config
	修改主机名：hostname asuser 永久修改：vi /etc/hostname
	centos默认使用openssh-clients作为远程登录客户端，使用ssh -V查看软件版本，安装该工具：yum install -y openssh-clients
	使用init 0 也可以关机
	openssh-clients登陆远程主机：ssh root@192.168.1.103
	
	基础命令
	ls -ld /tmp		-d通常和-l一起使用，写出-ld。-d用于查看参数目录的信息而不是参数目录的下级内容的信息
	cd 不加参数会直接进入用户主目录
	mkdir -p /tmp/test/01	-p用于逐级创建目录，如果目录已存在也不会报错，也不会做其他事情
	rmdir /tmp/test 只能删除空目录 -p可以从里到外逐级删除空目录
	rm -r用于删除目录，-f用于取消提示 删除目录通常使用rm -rf /tmp/test 不用用/做参数，非常危险
	which rmdir 用于查找某个命令的绝对路径
	查看PATH环境变量：echo $PATH	输出：/usr/bin:/root/bin:...
	将/root加入PATH变量：PATH=$PATH:/root
	mv /tmp/test/test.txt /root/ 移动文件或目录
	cp aaa bbb 复制文件 -r用于复制目录 CentOS中cp实际是cp -i
	echo 'abc' > aaa 将'aaa'重定向写入aaa文件
	cat test.txt -n 显示文件内容和行号
	cat -A test.txt 显示所有内容，包括不可特殊字符（-A 会将中文作为特殊字符处理，即不能正确识别中文）
	tac test.txt 倒序显示文件内容
	more和less用于分页查看文件，使用ctrl+D(B)回翻到上一页，空格键到下一页，less中使用j和k进入下一行和上一行，可以使用
/和?进行搜索，n跳转到下一个匹配项，/用于向下搜索，?用于向上搜索。
	head test.txt 默认显示前10行，-n 20 显示前20行，也可以写 head -20 test.txt
	tail用于查看文件末尾10行，-n 20显示最后20行，-f 动态查看最后10行
	ls -l 输出的第一列第一位表示文件的类型：
		d	目录	
		-	普通文件
		l	链接文件
		b 	块设备文件
		c	串行端口设备文件
		s	套接字文件
	ls -l 输出的第三列是节点数
	groupadd testgroup 新增用户组
	chgrp testgroup test.txt 修改文件所属组
	chgrp -R testgroup /tmp 修改目录和子目录所属组
	chown testuser[:testgroup] test.txt 修改文件所有者和所属组 -R用于同时修改目录和子目录
	读写执行的数字表示：r--4, w--2, x--1, -:0
	目录的默认权限是755(rwxr-xr-x)，文件的默认权限是644(rw-r--r--)
	chmod 750 dir1 改变目录权限 -R用于目录权限的级联修改，还可以这样使用：
		chmod u=rwx,go=rx dir2
		chmod u-x,g+w dir3
	umask 返回设置的umask值，文件的默认权限是根据umask值来设置的：普通文件权限使用666按位减去umask值，目录权限使用
777减去umask值，比如root用户默认umask值为022，普通用户为002，所以root创建的普通文件权限是644，而目录式755
	使用umask 002修改umask
	chattr +i dir4	添加i属性后，文件不能删除、重命名、设定链接、写入和新增数据
	chattr +a dir5  添加a属性后，文件只能追加不能删除，只有root才能设置这个属性
	lsattr -aR dir6 列出目录下所有文件和递归子目录的特殊属性
	set uid	 二进制可执行文件上的一种附加权限，可以让文件在执行时具有文件所有者的权限，比如passwd文件具有这个权限，
所以普通用户可以执行passwd来修改自己的秘密。
	set gid 和 set uid 一样，用于让文件在执行时具有文件所属组的权限
	sticky bit 相当于防删除位，目录设置此权限后，对这个目录有写权限的用户不能删除其它用户的文件。
		passwd的权限：rwsr-xr-x 如果没有x权限，则使用大写的S 
		/tmp/的权限： rwxrwxrwt 
	which vi 查找命令文件
	where [-b/-s/-m] file 查找[二进制/源码/帮助]文件 在索引库中执行模糊查找
	locate 类似于where，可以使用updatedb更新索引库，但是这个命令可能会需要一段时间
	find /path [options]
		find /path -mtime[-atime/-ctime] -10 10天以内进行过 “写入数据/访问文件/修改文件内容、属性”的文件 
			stat file 查询文件的mtime、ctime、atime
		find /path -name fileName 或 find /path -name "test*"
		find /path -type d 按类型查询
	查看支持的文件系统：cat /etc/filesystems
	centos7默认使用xfs文件系统，centos6使用的文件系统是ext4
	现代linux支持最多可使用255个字符作为文件名
	软链接和硬链接：
		ln -s orifile soft-link 
		ln orifile hard-link
		软链接相当于windows的快捷方式，删除原文件后就不能打开了。
		硬链接是复制了一个新的原文件的inode节点，这样删除原文件就不会实际删除文件，而只是删除了原文件名指向的
		inode节点，这时使用硬链接仍然可以访问原文件。
	查看系统内核版本：uname -r
	
	用户管理
	查看/etc/passwd文件：cat /etc/passwd | head
	返回：root:x:0:0:root:/root:/bin/bash
	/etc/passwd文件中每一行被:分隔为7个字段：第一个是用户名，可以是大小写字母、数字(不能再首位)、减号、点号和下划线
第二个字段是密码，现在不真正保存在这里，所以使用x占位，第三个字段是uid，root是0，自建的用户通常从1000开始；第四个字段
是gid，第五个字段是用户信息说明，第六个字段是用户的家目录；第七个字段是用户的shell，如果是/sbin/nologin表示这个用户
不能登陆。
	查看/etc/shadow文件：cat /etc/shadow | head -n 3
	返回：root:$6$xEeBczsD$U486aOPTUqBNei7PmpQVm9RqKIvy6XN3Rfr4F52sm1XP1WE6.T5HFdlmsLfyv6ltGZwvapet0rPlHzlF2
uvhV.:17883:0:99999:7:::
	/etc/shadow文件每条记录被:分隔为9个字段：第一个是用户名，第二个是加密后的密码，第三个是上一次修改密码的日期(距离
1970年1月1日的天数，考虑闰年)，第四个字段表示要过多少天才能修改密码，默认为0，第五个是密码多少天后到期，第六个是密码
到期前发出警告的天数，第七个是失效日期，即到期未修改密码过后多少天锁定账号，第八个字段是账号有效日期，即从1970年开始
有效的天数，过了时间账号就被锁定，第九个是保留使用，没有意义
	为了安全，/etc/shadow文件权限通常被设置为000，只有root能修改查看
	新增用户组：groupadd [-g gid] groupName 查看：tail -n3 /etc/group
	删除用户组：groupdel groupName 不能删除具有用户的用户组，必须先删除用户
	新增用户：useradd [-u uid] [-g gid] [-d homeDir] [-M] [-s shellDir] userName
	-d表示自定义家目录，-M表示不创建家目录(/etc/passwd文件中会有家目录名，但是这个目录实际没有创建)，-s表示自定义shell
	删除用户：userdel userName
	更改/etc/passwd记录的第五个字段-用户说明：chfn shanyu
	根据关键词过滤查询：grep 'shanyu' /etc/passwd
	更改密码：更改自己的秘密直接使用passwd
	root用户可以使用 passwd userName修改指定用户的秘密
	使用mkpasswd生成密码：先安装expect ： yum install -y expect 然后直接使用mkpasswd生成9位随机密码
指定长度： mkpasswd -l 12
	切换用户：su [-] userName [-]表示初始化用户环境变量，root切换普通用户不需要密码，使用exit返回原用户
	普通用户使用su切换到root是需要root密码的，但是这不太安全，所以出现了sudo
	sudo配置文件：/etc/sudoers
	默认只有root能使用sudo，使用visudo 编辑/etc/sudoers文件（先安装 yum install -y sudo）:
shanyu  ALL=(ALL)  ALL 允许shanyu用户在所有主机上以所有用户身份使用sudo执行所有命令
	使用sudo：sudo cat /etc/shadow 使用sudo需要输入自己的秘密
	当用户以"sudo passwd"或者"sudo passwd root"方式运行命令的时候，可以直接把root用户的密码改掉，这是非常危险的，
必须要把这两条命令禁止调，在命令前面加上"!"来表示不可执行的命令：
	为用户组shanyu配置sudo：%shanyu  ALL=(root) !/usr/bin/passwd, /usr/bin/passwd [A-Za-z]*, !/usr/bin/passwd root
	/etc/sudoers中配置用户别名：User_Alias USER_AUTH = shanyu,zhangwei
	/etc/sudoers中配置命令别名：Cmnd_Alias SU = /usr/bin/su
	/etc/sudoers中配置不需要密码切换用户：USER_AUTH ALL=(ALL) NOPASSWD:SU
	这样shanyu用户就可以使用 sudo su - root 直接切换到root，而不用输入密码
	sshd配置文件：/etc/ssh/sshd_config,不允许root远程登录：PermitRootLogin no, 重启sshd服务：systemctl restart sshd.system
	
	磁盘管理
	df 不加参数查看挂载的磁盘和目录情况，大小单位为KB。其中/和/boot是安装系统时划分的分区。/dev和/dev/shm是内存分区，
保存在这两个分区的文件相当于保存在内存中，关机会丢失。/run等都是临时文件系统。
	df -i 查看inode节点使用情况，一个文件系统中可以保存的inode节点数是限定的，如果用完了，即使磁盘还有空间也不能继续
保存文件了。
	df -h 自动选择合适的单位显示文件系统大小
	df -k 以KB为单位，和不使用-k结果是一样的
	df -m 以MB为单位
	df -i | grep -v tmpfs 过滤掉包含字符串tmpfs的行
	du /home/zhangwei/test_dir 不加参数查看目录和子目录所占空间大小。-a 用于列出目录和子目录下的文件；-b指定单位为B，
-k指定单位为KB，-m指定单位为MB，-h自动使用合适单位。注意，使用-k,-h和不加参数，占用空间大小不足4KB会显示为4KB，
-m也会把不足1MB的大小显示为1MB. -c用于计算占用空间总和； -s用于只显示占用空间总和
	使用 du -sh /home/zhangwei/test_dir以合适单位显示指定目录占用空间总和
	fdisk -l 列出所有设备和分区表
	fdisk -l /dev/sdb 列出指定设备和分区表
	fdisk /dev/sdb 对/dev/sdb进行分区划分：
命令： m 显示命令说明；
	   p 打印分区情况；
	   n 建立新的分区；
	   w 保存；
	   q 退出；
	   d 删除分区；
	   建立分区时可以选择主分区(p)和扩展分区(e),一块磁盘最大只能划分4个主分区，设置分区结束扇区可以使用+1000M这种方法
	设置扇区大小。建立扩展分区后，再建立分区只能选择主分区和逻辑分区(l)，如果磁盘空间已经分完了，就不能再选主分区了，只能在扩展分区
	里面划分逻辑分区。逻辑分区的id总是从5开始。
	mke2fs 可以格式化分区为ext2、ext3和ext4格式，实际上还有mkfs.ext2、mkfs.ext3、mkfs.ext4命令。
参数：-b n*1024 设置数据块的大小，只能是1024的倍数，通常不能大于4096，单位是B
	  -t ext4 设置文件系统类型
	  -L LABEL 设置label
	  -i 设置inode节点的大小
	  -N 设置inode节点的数量
	  -c 格式化前检查磁盘
	  -j 设置类型为ext3，相当于使用mkfs.ext3
	格式化分区为xfs类型需要使用 mkfs.xfs 命令；mkfs.xfs 设置块大小参数：-b size=2048 
	mke2fs 可以直接重新格式化已经格式化的分区，mkfs.xfs重新格式化则需要加 -f
		mke2fs -t ext4 -b 2048 -L TEST-5 /dev/sdb5
		mkfs.xfs -b size=2048 -L TEST-6 /dev/sdb6
	e2label /dev/sdb5 查看extn格式分区标签
		e2label /dev/sdb5
	格式化后的磁盘分区被看成是一个块设备文件，使用前需要先挂载到某个目录下，挂载目录一般是空目录，如果挂载目录原来有
文件，挂载分区后就不能在看到目录下原来的文件了
	mount 不加参数可以查看所有挂载的分区信息
	mount /dev/sdb5 /newdir/ 挂载/dev/sdb5分区到/newdir/目录
	卸载：umount /newdir/
	使用LABEL挂载：mount LABEL=TEST-5 /newdir/
	/etc/fstab文件：
	cat /etc/fstab
		UUID=9d6efa31-598f-4326-b819-706d907fbaa6	/boot	xfs  defaults   0   0
	一共6列，第一列可以是挂载分区名、UUID、LABEL；第二列是挂载点，第三列是文件系统类型；第四列是挂载分区的一些特性，
第五列0表示不备份，1表示备份；第六列表示是否开机自检磁盘，0不自检，1自检优先级高于2
	第四列常用选项：async/sync 非实时同步/实时同步数据到磁盘；auto/noauto 开机自动/不自动挂载；ro/rw 只读/可读写挂载；
exec/noexec 允许/不允许可执行文件操作，不能把根分区挂载为noexec；user/nouser 允许/不允许非root用户挂载(卸载)；
defaults 包含rw、exec、auto、nouser、async
	通过/etc/fstab文件挂载：
	新增一行：
		LABEL=TEST-5 /newdir/ ext4 defaults 0 0
	使用 mount -a 挂载所有/etc/fstab文件中的分区
	使用mount 挂载分区可以使用 -t 指定分区格式类型，但是通常是可以自动识别的，并不需要这样指定，使用-o可以设置/ect/fstab
文件中第四列的挂载分区特性
	重新挂载： mount -o remount /newdir/  这里-o没有写具体值应该是使用defaults
	blkid 查看所有挂载过的分区的UUID；也可以使用：blkid /dev/sdb5
	使用UUID挂载：mount UUID="9d6efa31-598f-4326-b819-706d907fbaa6" /newdir/
	/etc/fstab文件中配置的分区会在系统启动后挂载，另一种让系统启动后挂载分区的方法是在/etc/rc.d/rc.local文件中写入
挂载命令：/usr/bin/mount UUID="xxxx" /newdir/ (这里mount最好使用完整路径)
	如果当前在挂载目录内，可以使用umount -l /newdir/来卸载
	虚拟内存不够，可以增加一个虚拟磁盘：先建立swapfile，然后格式化为swap格式，然后启用虚拟磁盘
	dd if=/dev/zero of=/tmp/newdisk bs=1M count=1024
	if指定源文件(UNIX系统/dev/zero文件可以提供0)，of指定目标文件，bs指定块大小，count指定块数量，目标文件大小=bs*count
	mkswap -f /tmp/newdisk 格式化为swap格式
	swapon /tmp/newdisk 启用虚拟磁盘
	free -m 使用MB为单位查看内存使用情况。
	
	使用Vim
	Vim是Vi的升级版，日常使用几乎没有什么差别。安装Vim：yum install -y vim-enhanced
	Vim有三种模式：一般模式、编辑模式和命令模式。
	使用vim filename进入一般模式，在这个模式下可以移动光标、删除字符和行、复制粘贴。
		h或<- 光标左移一个字符
		l或-> 光标右移一个字符
		j或下方向键 光标下移一行
		k或上方向键 光标上移一行
		(上面几个命令还可以在前面加一个数字n，表示移动n个字符)
		Ctrl+F 下翻一页
		Ctrl+B 上翻一页
		0或shift+6 光标移到行首
		shift+4 光标移到行尾
		gg 光标移动到首行
		G 光标移动刀尾行
		nG 光标移动到第n行
		x 向后删除一个字符
		X 向前删除一个字符
		nx 向后删除n个字符
		dd 删除/剪切光标所在行
		ndd 删除/剪切光标所在行开始的n行
		yy 复制光标所在行
		p 在光标所在行下方粘贴已复制或剪切的内容
		P 在光标所在行上方粘贴已复制或剪切的内容
		nyy 复制光标所在行开始的n行
		u 还原上一步操作
		v 按v后移动光标选中指定字符，然后可以使用y粘贴选中的内容，使用d剪切，x删除选中的内容
	进入编辑模式的几个命令：
		i 在当前字符前插入
		I 在当前行行首插入
		a 在当前字符后插入
		A 在当前行行尾插入
		o 在当前行下面新增一个空行输入
		O 在当前行上面新增一个空行输入
	命令模式：
		/word 在光标之后查找word，按n转到下一个匹配项
		?word 在光标之前查找word，按n转到上一个匹配项
		:n1,n2s/word1/word2/g 在n1行和n2行间替换word1为word2，不加g表示只替换每一行的第一个匹配项
		:1,$s/word1/word2/g 将文档中所有的word1替换为word2，不加g表示只替换每一行的第一个匹配项
		:q			退出
		:w			保存修改
		:wq			保存退出
		:w!			强制保存，root用户可以强制写入不允许写的文件(只要文件有写权限，root就可以直接保存，如果
所有用户都没有写权限，root可以使用w!强制写入)
		:q!			强制退出，不保存修改
		:set nu		显示行号
		:set nonu	不显示行号
	
	压缩和打包
	gzip压缩工具：gizp [-d#] filename -d用于解压，-#用于设置压缩级别，1最差，9最好，默认为6
	gzip压缩完成后会删除原文件，gzip不支持压缩目录，如果压缩的是文本文件，可以使用 zcat filename.gz查看内容
	bzip2压缩工具：bzip2 [-zd#] filename -z用于压缩，写不写都一样，-d用于解压，-#设置压缩级别，也是1~9，默认为9
	bzip2压缩完成后会删除原文件，bzip2不支持压缩目录，如果压缩的是文本文件，可以使用 bzcat filename.bz2查看内容
	xz压缩工具：xz [-dz] filename 
	xz也不能压缩目录，使用xzcat filename.xz 查看压缩文本文件的内容
	tar 打包工具：
		tar [-zjJxcvfpP] filename tarname 
		-z表示打包后使用gzip压缩
		-j表示打包后使用bzip2压缩
		-J表示打包后使用xz压缩
		-x表示解包或解压缩
		-t表示查看tar包里的文件列表
		-c表示建立一个tar包
		-v表示可视化
		-f 后跟文件名，表示打包后的包名(压缩包名)，解包则是要解包的包名。多个参数需要把f写到最后面
		-p表示为tar包添加原文件的属性
		-p表示可以使用绝对路径、
		--exclude filename表示打包时不包括指定文件
	打包文件：tar -cvf filename.tar filename
	查看tar包中的文件列表：tar -tf filename.tar
	安装tree工具：yum install tree
	使用tree查看目录内容：tree dirname
	使用tar打包文件或目录都不会删除原文件或目录，同样解包也不会删除tar包文件
	打包同时使用gzip压缩：tar -czvf dirname.tar.gz dirname/
	虽然对tar包进行了gzip压缩，还是可以使用tar -tf dirname.tar.gz查看文件列表
	排除指定文件并使用bzip2压缩：tar -cjvf test_tar.tar.bz2 test_tar/ --exclude first.c
	解压和解包：tar -xjvf test_dir.tar.bz2
	mm.tar.xz解包：先使用xz解压缩，xz -d mm.tar.xz 再使用tar解包：tar xvf mm.tar
	zip压缩包可以在windows和linux中通用，而且可以压缩目录
		zip filename.zip filename
	压缩目录：zip dirname.zip dirname/* 这种方式只会压缩目录下的文件和子目录本身，子目录下的文件不会被包含
使用-r压缩目录下的所有文件：zip dirname.zip dirname/
	解压缩：unzip filename.zip 
	zip压缩和解压缩都不会删除原文件。
	解压缩到指定目录：unzip -d tmpdir dirname.zip 
	查看zip压缩包内容：unzip -l dirname.zip
	检测是否损坏：unzip -t dirname.zip 
	解压缩后覆盖已有文件：unzip -o dirname.zip -d tempdir
	解压缩后不覆盖已有文件： unzip -n -d tempdir dirname.zip
	touch test.txt
	echo "hello" > !$		//!$表示上一个命令的参数
	
	安装RPM包
	RPM包是预先在Linux上编译并打包的文件，安装起来非常快捷
	软件为什么需要安装：安装的目的是把执行程序放到执行路径下来，把配置文件放到程序可读位置，把需要的链接库放到可
找到的位置，以及配置一些需要预先配置的参数等。如果一个程序不需要这些准备就可以执行，就不需要安装了。
	挂载安装linux的光盘：mount /dev/cdroom /mnt
	查看安装光盘里的npm包：ls /mnt/Packages | head
	rpm包：	abrt-2.1.11-48.el7.centos.x86_64.rpm
			包名 版本号  发布版本号	  运行平台
	安装：rpm -ivh libjpeg-turbo-devel-1.2.90-5.el7.x86_64.rpm
		  -i 表示安装 -v表示可视化 -h表示显示进度
	升级：rpm -Uvh filename.rpm
	卸载：rpm -e name 这里的name只是安装的包名，而非rpm文件名，可以使用rpm -qa name查询
	查询是否已安装指定包：rpm -q name
	查询系统已安装的所有rpm包： rpm -qa | head
	查询已安装包的详细信息：rpm -qi name
	列出rpm包安装后的所有文件：rpm -ql name
	查询某个文件属于哪个rpm包：rpm -qf filename
	使用rpm安装需要自己处理依赖问题，也就是说需要自己先手动安装依赖包，才能安装当前包
	yum工具可以联网下载需要的rpm包，同时会自动解决依赖包的安装
	列出所有的rpm包资源：yum list | head
	搜索rpm包：yum search vim 也可以使用：yum list | grep 'vim'
	使用安装yum安装：yum install -y vim-enhanced		//不加-y表示以与用户交互的方式安装
	卸载：yum remove name（卸载时最好不使用-y，防止卸载了某些依赖的重要的包）
	升级：yum update name 
	使用光盘作为yum源：
	先挂载光盘：mount /dev/cdroom /mnt
	删除/etc/yum.repos.d目录下的文件：cp -r /etc/yum.repos.d /etc/yum.repos.bak
		rm -rf /etc/yum.repos.d/*
	在/etc/yum.repos.d创建新文件：dvd.repo:  vim /etc/yum.repos.d/dvd.repo
		[dvd]
		name=install dvd
		baseurl=file:///mnt
		enabled=1
		gpgcheck=0
	刷新repos生成缓存：yum makecache
	然后就可以使用yum安装了：yum install -y tftp
	恢复yum源：rm -rf /etc/yum.repos.d
		mv /etc/yum.repos.bak /etc/yum.repos.d
		yum list
	使用yum下载rpm包而不安装：
		yum install npmname -y --downloadonly --downloadonlydir=/usr/local/src/
		如果已经安装该rpm包，可以使用：
		yum reinstall npmname -y downloadonly --downloadonlydir=/usr/local/src/
	编译源码安装：
		获取源码 wget http://archive.apache.org/dist/apr/apr-util-1.5.1.tar.gz
		解压：tar -zxvf apr-util-1.5.1.tar.gz
		进入解压后的目录：cd apr-util-1.5.1
		执行： ./configure --prefix=/usr/local/apr-util --with-apr=/usr/local/apr/
		执行：make
		执行：make install
	yum-config-manager: command not found
	这个是因为系统默认没有安装这个命令，这个命令在yum-utils 包里，可以通过命令yum -y install yum-utils 安装就可以了。
	

		




































	