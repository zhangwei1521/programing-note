										HTML参考
	HTML是一种用于创建网页的标准标记语言。它的全称是 HyperText Markup Languag。标记语言不同于编程
语言，它由一套标签组成，标签通常用来描述文档。标签可能只有标签符号和属性，也可能包含其他标签或文本。
HTML 使用标记标签来描述网页。
	HTML元素和HTML标签基本上是同义词。但是有时候HTML标签可能表达的只是标签符号，而不包括内部的内容。
	浏览器根据HTML文档使用的标签来决定如何展现HTML页面的内容给用户。
	HTML最早发布于1991年，几个重要版本时间线如下：
		HTML1.0		1991
		HTML+		1993
		HTML2.0		1995
		HTML3.2		1997
		HTML4.01	1999
		XHTML 1.0	2000
		HTML5		2012
		XHTML5		2013
	HTML文档由于历史原因有两种后缀名：htm和html。两种后缀名没有区别，都可以使用。
	一个标准的HTML文档模板：
		<!DOCTYPE html>
		<html>
			<head>
				<meta charset="utf-8">
				<title>菜鸟教程(runoob.com)</title>
			</head>
			<body>
				<h1>我的第一个标题</h1>
				<p>我的第一个段落。</p>
			</body>
		</html>
	<!DOCTYPE html> 声明 HTML 版本为HTML5。
	<html> 元素是 HTML 页面的根元素，head> 元素包含了文档的元（meta）数据，如 <meta charset="utf-8">
定义网页编码格式为 utf-8。目前在大部分浏览器中，直接出现中文会出现中文乱码的情况，这时候就需要在头部将
字符声明为 UTF-8。
	<title> 元素描述了文档的标题，<body> 元素包含了可见的页面内容，<h1> 元素定义一个大标题，<p> 元素
定义一个段落。
	HTML 元素通常以开始标签起始，以结束标签终止。某些 HTML 元素具有空内容，称为空元素。空元素在开始标
签中进行关闭。
	在 XHTML、XML 以及未来版本的 HTML 中，所有元素都必须被关闭。即使 <br> 在所有浏览器中都是有效的，
但使用 <br /> 其实是更长远的保障。HTML 标签对大小写不敏感：<P> 等同于 <p>。
	HTML元素使用属性保存附加信息。属性总是以名称/值对的形式出现，比如：name="value"，属性值应该始终被
包括在引号内。属性和属性值对大小写不敏感，但是新版本的 (X)HTML 要求使用小写属性。class 属性可以设置多个：
<p class="c1 c2">xxx</p>
	HTML标题标签只用于标题。不要仅仅是为了生成粗体或大号的文本而使用标题。
	<h1> 定义最大的标题。 <h6> 定义最小的标题。应该将 h1 用作主标题（最重要的），其后是 h2（次重要的），
再其次是 h3，以此类推。
	<hr/> 标签在 HTML 页面中创建水平线。
	HTML注释：<!-- 这是一个注释 -->
	其实<h1>到<h6>字体大小与<font size="1">到<font size="6">字体大小逆序对应，比如1号字体对应6号标题，
2号字体对应5号标题。
	浏览器会自动地在</p> 段落元素的前后添加空行。（</p> 是块级元素）
	在HTML中，无法通过在 HTML 代码中添加额外的空格或换行来改变输出的效果。所有连续的空格或空行都会被算
作一个空格。
	早期的HTML使用格式化标签对文本的显示进行修饰，如<b>用于文本加粗，现在通常不建议再使用了，修饰文本应
该使用CSS来实现。但是另外一些具有语义的标签还是需要保留使用的，如<em>用于定义着重文字，<strong>用于加重
语气。<sub>用于下标，<sup>用于上标。<del>定义删除字，<ins>定义插入字。<code>用于定义计算机代码,<pre>用于
定义预格式文本，<val>用于定义变量。<abbr>定义缩写,<q>定义短的引用语,<cite>定义引用、引证。
	
	HTML5标准文档实例：HTML5-std-demo1.html
	HTML元素/标签 说明：
	文档声明：
		<!DOCTYPE> 位于文档中的最前面的位置，处于 <html> 标签之前。实际上，它不是一个 HTML 标签，只是用
				来告知 Web 浏览器页面使用了哪种 HTML 版本。在 HTML 4.01 中，<!DOCTYPE> 声明需引用 DTD （文档类型声明），
				因为HTML 4.01 是基于 SGML，HTML5 不是基于 SGML，因此不要求引用 DTD。在HTML5文档中不应该再使用已经废弃的
				标签，但是如果使用了，浏览器还是可以识别出它们。
	根元素：
		<html> 元素 表示一个HTML文档的根（顶级元素）,所有其他元素必须是此元素的后代。
	文档元数据：
		<base> 元素 指定用于一个文档中包含的所有相对URL的基本URL。一份文档中只能有一个<base>元素。
		<head> 元素 规定文档相关的配置信息（元数据），包括文档的标题，引用的文档样式和脚本等。
		<link> 元素规定了外部资源与当前文档的关系。这个元素可用来为导航定义一个关系框架。这个元素最常于链
			   接样式表。
		<meta> 元素表示那些不能由其它HTML元相关元素(<base>,<link>,<script>,<style>或<title>)之一表示的任何
			   元数据信息.
		<style>元素包含文档的样式信息或者文档的部分内容。默认情况下，该标签的样式信息通常是CSS的格式。
		<title> 元素 定义文档的标题，显示在浏览器的标题栏或标签页上。它只可以包含文本，若是包含有标签，则包
			   含的任何标签都不会被解释。
	分区根元素：
		<body> 元素表示文档的内容。
	内容分区:
		<address> 元素可以让作者为它最近的<article>或者<body>祖先元素提供联系信息。在后一种情况下，它应用于整
				  个文档。
		<article> 元素表示文档、页面、应用或网站中的独立结构，其意在成为可独立分配的或可复用的结构.
		<aside>   元素表示一个和其余页面内容几乎无关的部分，被认为是独立于文档内容的一部分并且可以被单独的拆分
				  出来而不会使整体受影响。其通常表现为侧边栏或者嵌入内容。可以用于文档相关的其他文档，广告等。
		<footer>  元素表示最近一个章节内容或者根节点（sectioning root ）元素的页脚。一个页脚通常包含该章节作者、
				  版权数据或者与文档相关的链接等信息。
		<header>  元素用于展示介绍性内容，通常包含一组介绍性的或是辅助导航的实用元素。
		<h1>–<h6> 标题(Heading)元素呈现了六个不同的级别的标题，<h1> 级别最高，而 <h6> 级别最低。一个标题元素能
				  简要描述该节的主题。
		<main>	  元素呈现了文档<body>或应用的主体部分。主体部分由与文档直接相关，或者扩展于文档的中心主题、应用的
				  主要功能部分的内容组成。这部分内容在文档中应当是独一无二的。
		<nav>	  描绘一个含有多个超链接的区域，这个区域包含转到其他页面，或者页面内部其他部分的链接列表.适合用来
				  将一些热门的链接放入导航栏。
		<section> 表示文档中的一个区域（或节），比如，内容中的一个专题组，一般来说会有包含一个标题（heading）。
				  一般通过是否包含一个标题 (<h1>-<h6> element) 作为子节点 来 辨识每一个<section>。
		<hgroup>  代表一个段的标题，这个元素可能还不太成熟(浏览器支持还需要完善)。
				  <hgroup>
					  <h1>Main title</h1>
					  <h2>Secondary title</h2>
				  </hgroup>
	文本内容：
		<blockquote> 元素，代表其中的文字是引用内容。若引文来源于网络，则可以将原内容的出处 URL地址设置到 cite属性上。
					 可以通过 <cite> 元素以文本的形式给出引文的出处。
		<dl> 		 标签定义一个定义/描述列表。<dl> 标签与 <dt>(定义项目/名字)和 <dd>(描述每一个项目/名字)一起使用。
					 用于一些术语的定义等。
						<dl>
							<dt>Beast of Bodmin</dt>
							<dd>A large feline inhabiting Bodmin Moor.</dd>

							<dt>Morgawr</dt>
							<dd>A sea serpent.</dd>

							<dt>Owlman</dt>
							<dd>A giant owl-like creature.</dd>
						</dl>
		<dir> 	 表示一个目录，也就是文件名称的集合。HTML5不再支持。 HTML 4.01 已废弃。
		<div> 	 一个通用型的流内容容器，它在语义上不代表任何特定类型的内容
		<figure> 规定独立的流内容（图像、图表、照片、代码等等）。<figure> 元素的内容应该与主内容相关，同时元素的位置
				 相对于主内容是独立的。如果被删除，则不应对文档流产生影响。用于页面美化添加图片。
		<figcaption> 标签为 <figure>元素定义标题。<figcaption> 元素应该被置于 <figure>元素的第一个或最后一个子元素的位置。
		<hr> 	 表示段落级元素之间的主题转换，在早期HTML中，它是一个水平线。现在它在可视化浏览器中仍然表现为水平线，
				 但目前被定义为语义上的，而不是表现层面上。
		<li>	 用于表示列表里的条目。它必须被包含在一个父元素里：一个有顺序的列表(<ol>)，一个无顺序的列表(<ul>)，或者一
				 个菜单 (<menu>)。在菜单或者无顺序的列表里，列表条目通常用点排列显示。在有顺序的列表里，列表条目通常是在左
				 边有按升序排列计数的显示，例如数字或者字母。
		<p>		 表示文本的一个段落。该元素通常表现为一整块与相邻文本分离的文本
		<pre>    表示预定义格式文本。在该元素中的文本通常按照原文件中的编排，以等宽字体的形式展现出来，文本中的空白符（比如
				 空格和换行符）都会显示出来。(紧跟在 <pre> 开始标签后的换行符会被省略)
	内联语义文本：
		<a> 	 元素(或锚元素)可以创建一个到其他网页、文件、同一页面内的位置、电子邮件地址或任何其他URL的超链接。
		<abbr>	 元素代表缩写，并可选择提供一个完整的描述。
		<b>		 用于吸引读者的注意到该元素的内容上，原称：提醒注意（Bring Attention To）元素，但是后来被称为粗体（Boldface）元素，
				 现在通常不建议使用这个元素。
		<bdi>    (双向隔离元素) 隔离可能以不同方向进行格式化的外部文本。用于不知道是从什么方向嵌入的文本，如来自于数据库的文本
				（有起数据库的文本方向），一般不设置dir属性，由浏览器决定嵌入的文本的方向。
		<bdo>    (HTML双向覆盖元素)用于覆盖当前文本的朝向，它使得字符按给定的方向(dir属性指定)排列。
		<br> 	 在文本中生成一个换行（回车）符号。
		<cite>   表示一个作品的引用
		<data>   将一个指定内容和机器可读的翻译联系在一起。value属性指定元素内容对应的机器可读的翻译。
		<dfn>    用来定义一个定义项目。作为一个短语标签使用：
					<p><dfn id="def-internet">The Internet</dfn> is a global ....</p>
				 与dl、dt配合使用：
				 <dl>
					<dt>
						<dfn>
						  <abbr title="World-Wide Web">WWW</abbr>
						</dfn>
					</dt>
				    <dd>The World-Wide Web (WWW) xxx ...</dd>
				 </dl>
		<em>	 标记出需要用户着重阅读的内容， <em> 元素是可以嵌套的，嵌套层次越深，则其包含的内容被认定为越需要着重阅读。
		<i> 	 用于表现因某些原因需要区分普通文本的一系列文本。例如技术术语、外文短语等。它的内容通常以斜体显示。
		<kbd>	 用于表示用户输入，它将产生一个行内元素，以浏览器的默认monospace字体显示。
		<mark> 	 标签代表突出显示的文字,例如可以为了标记特定上下文中的文本而使用这个标签.它可以用来显示搜索引擎搜索后关键词。
		<q>		 表示一个封闭的并且是短的行内引用的文本. 这个标签是用来引用短的文本,长引用使用<blockquote>
		<ruby>   用来展示东亚文字注音或字符注释。
		<rp> 	 用于为那些不能使用 <ruby> 元素展示 ruby 注解的浏览器，提供随后的圆括号。浏览器支持ruby元素就不会显示括号
					<ruby>
					  漢 <rp>(</rp><rt>Kan</rt><rp>)</rp>
					  字 <rp>(</rp><rt>ji</rt><rp>)</rp>
					</ruby>
		<rt>     用于包含字符的发音，字符在 ruby 注解中出现，它用于描述东亚字符的发音。这个元素始终在 <ruby> 元素中使用。
		<s>      使用删除线来渲染文本。使用 <s> 元素来表示不再相关，或者不再准确的事情。但是当表示文档编辑时，不提倡使用 <s> ；
				 为此，提倡使用 <del> 和 <ins> 元素。
		<samp>   用于标识计算机程序输出，通常使用浏览器缺省的 monotype 字体
		<small>  使文本的字体变小一号,在HTML5中，除了它的样式含义，这个元素被重新定义为表示边注释和附属细则，包括版权和法律文本。
		<span>   短语内容的通用行内容器，并没有任何特殊语义。
		<strong> 表示文本十分重要，一般用粗体显示。
		<sub>    定义一个文本区域，出于排版的原因，与主要的文本相比，应该展示得更低并且更小。
		<sup>    定义一个文本区域，出于排版的原因，与主要的文本相比，应该展示得更高并且更小。
		<time>   用来表示24小时制时间或者公历日期，若表示日期则也可包含时间和时区。
					<p>The concert took place on <time datetime="2001-05-15 19:00">May 15</time>.</p>
		<tt>     定义打字机文本。HTML5 不支持 <tt> 标签。可以使用<code>代替或用css来实现等宽字体样式。
		<u>      使文本在其内容的基线下的一行呈现下划线。在HTML5中, 此元素表示具有未标注的文本跨度，显示渲染，非文本注释，例如将
				 文本标记为中文文本中的专有名称, 或 将文本标记为拼写错误。 <u> 在 HTML 4 和 XHTML 1 中废弃，但是在 HTML 5 中使用
				 其它语义引入。
		<var>    表示变量的名称，或者由用户提供的值。
		<wbr>	 表示在浏览器窗口或父级窗口宽度足够的情况下，不换行；在宽度不足的情况下，在加了<wbr>处主动换行。可以看出<wbr>其实
				 没有宽度。
	媒体元素：
		<map>    与<img>、<area> 一起使用来定义一个图像映射(一个可点击的链接区域).<map>元素必需提供name属性，值必须不能为空并且不
				 能带空格。name属性不准与同文档中其他map元素的值相同，如果id属性也被添加，name属性和id属性的值必须相同。<img>使用
				 usemap属性引用<map>的name属性实现关联。
		<area>   定义图像映射内部的区域，<area> 元素始终嵌套在 <map> 标签内部。<area>使用shape属性定义链接区域形状，值可以是default,
				 rect,circle和poly,使用coords定义链接区域位置，shape为rect，coords的值为左上角和右下角坐标，shape为circle，coords
				 值为圆心坐标和半径。
				 <img src="../images/planets.gif" usemap="example-map-1" width="145" height="126" />
				 <map name="example-map-1">
					<area shape="circle" coords="124,58,8" href="another.html" />
					<area shape="default" />
				 </map>
		<audio>  用于在文档中表示音频内容。 <audio> 元素可以包含多个音频资源， 这些音频资源可以使用 src 属性或者<source> 元素来进行描述；
				 浏览器将会选择最合适的一个来使用。对于不支持<audio>元素的浏览器，<audio>元素也可以作为浏览器不识别的内容加入到文档中。
				 目前，<audio> 元素支持的3种文件格式：MP3、Wav、Ogg。IE9支持audio元素，但是只支持mp3格式，Safari不支持Ogg格式。
					 <audio controls>
						<source src="horse.ogg" type="audio/ogg">
						<source src="horse.mp3" type="audio/mpeg">
						您的浏览器不支持 audio 元素。
					 </audio>
				  autoplay指定是否自动播放，controls属性表示是否显示控制组件
		<img> 	 代表文档中的一个图像。
		<video>  用于在HTML或者XHTML文档中嵌入视频内容。
					<video width="320" height="240" controls>
						<source src="movie.mp4" type="video/mp4">
						<source src="movie.ogg" type="video/ogg">
						您的浏览器不支持 video 标签。
					</video>
				 autoplay指定是否自动播放，controls属性表示是否显示控制组件。目前，<video> 元素支持三种视频格式：MP4、WebM、Ogg。
				 IE9开始支持video元素，但是只支持mp4格式。Safari不支持Ogg格式。poster属性设置一个海报帧的URL。preload属性指定用户
				 操作前的默认处理，可以是以下值：none--不缓存视频，metadata--下载元数据，auto--缓存视频，空字符串--同auto
		<source> <audio>和<video>使用<source>来指定音频/视频地址和媒体类型。
		<track>  被当作媒体元素—<audio> 和 <video>的子元素来使用。它允许指定计时字幕（或者基于事件的数据），例如自动处理字幕。
				 属性default指定默认track，kind指定文本轨道的文本类型，如subtitles(辅助文字)、captions(音频文字)
		
		