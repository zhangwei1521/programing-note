                                    使用mybatis
    第一章 ORM框架的起源，JDBC、mybatis和hibernate的区别及应用场景
	本质上java程序访问操作数据库都是通过JDBC实现的，JDBC包括两个部分：官方的JDBC接口（规范）和数据库厂商对标准接口的
实现（JDBC驱动程序）。JDBC的问题在于每次访问数据库都需要在自己的程序中重复的编写如下语句：加载驱动、建立连接、建立会话、
执行sql、关闭会话、关闭连接，还得处理可能抛出的繁多的异常。ORM框架就是为了解决JDBC的这种问题而开发的，但是ORM框架使用
的仍然是JDBC，只是对JDBC进行了一层或多层封装而已。
	ORM原称：Object Relation Mapping，意为对象关系映射，ORM模型物理上是一个或一组描述程序中的对象（或类）和数据库中的
一条记录（或表）之间的对应关系的文件。通常所说的ORM模型指的是表示程序对象和数据库记录对应关系的方式。
	Hibernate是java编程体系中最为完善的ORM框架，它使用xml文件或注解来定义java实体类（对象）和数据库表（记录）间的对应
关系，映射采用全表映射，这样就不需要再手动的去操作数据库了，所有的操作都在对象上完成，由框架去实现对应的数据库操作。
这种完善的对象关系映射看起来非常方便，但是也存在问题，那就是灵活性和性能问题，把操作数据库完全交给框架时也就失去了精
确控制sql的权利，这样很难对sql进行调优，全表映射对于字段较多的表来说取出不需要的字段是一种网络带宽的浪费。所以Hibernate
很好，但不是万能的解决方案。
	mybatis是一个半自动的ORM框架，需要自己去写sql，有些时候，这显得有些繁琐，有些时候这又意味着操作数据库更加自由。
映射xml文件或注解中的sql都对应一个java接口类中的一个方法，操作数据库就通过调用这个方法实现。
	总体来说，原始的JDBC编程接口使用起来太过繁琐，实际开发中通常很少使用，Hibernate开发效率高，但是对于复杂性高、性能
要求高的系统来说不太适合，通常用于数据关系不太复杂、性能要求不太高的系统。mybatis则不适合用于需要快速开发的低复杂性系
统，适合用在数据关系复杂、需要通过优化sql提供高效操作数据库能力的系统。
	
	