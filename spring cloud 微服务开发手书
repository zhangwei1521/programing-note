							spring cloud 微服务开发手书
第一章 基础知识
	微服务是什么？
	微服务是对单体系统进行分布式改造的一种设计架构模式，通过分布式的多个独立运行的服务进程代替单进程的单体应用，服务
之间使用轻量级的HTTP消息进行通信，每一个服务都只关注一组耦合度较高、业务一致的功能，并且每个服务维护自己的数据存储、
测试以及部署发布。不同的服务可以采用不同的语言进行开发。
	
	单体系统出了问题？
	单体系统随着需求的扩展，变得越来越复杂和臃肿，部署发布也变得耗时麻烦，并且不利于团队协作。
	
	微服务不是万能的：
	多个服务进程的编排会给运维带来新的挑战；服务间调用时接口变动需要保证一致性；分布式系统固有的复杂性：如网络问题、
分布式事务等。
	
	Martin Fowler提出的微服务架构九大特性：
	服务组件化、按业务组织团队、做产品的态度、智能端点和粗粒度的通信、去中心化治理（解耦单一开发平台）、去中心化管理数据
、基础设施自动化（自动化测试、自动化部署）、容错设计、演进式设计。
	
	各种微服务框架都是为了充分利用微服务架构的优点，同时尽可能地解决微服务带来的问题。
	
	为什么是spring cloud？
	spring cloud提供了实施微服务架构的所有框架，spring cloud组合了一批经过充分测试的基础框架（组件），同时提供了
一些新的边缘组件。
	
	spring cloud简介：
	它是一个基于spring boot实现的微服务开发框架工具。它为微服务架构中涉及的配置管理、服务治理、断路器、智能路由、集群状态管理、分布式会话等
操作提供了一种简单的开发方式。
	spring cloud包含多个子项目（框架组件）：spring cloud config、 spring cloud netflix等。
	spring cloud的版本：大版本使用伦敦的地铁站名（按字母排序），bug修复版为SRX。例如：Brixton.SR5

	
第二章 spring boot基础
	为什么是spring boot？
	spring cloud 的各个子项目都是使用spring boot进行开发的；同时由于spring boot的快速开发、自动化配置等优秀特性，在我们自己的
项目中，最好也使用它来开发自己的微服务。
	
	spring boot做了什么？
	spring boot提供了大量的自动化配置以代替老式spring工程的样板式配置；spring boot还提供了一系列starter poms（起步依赖模块）以
帮助我们手动维护项目中复杂的依赖关系；spring boot支持嵌入式的web容器，可以很方便的进行容器化部署发布。
